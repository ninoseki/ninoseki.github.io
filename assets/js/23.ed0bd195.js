(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{304:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"page-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#page-title"}},[t._v("#")]),t._v(" "+t._s(t.$page.title))]),t._v(" "),s("p",[s("span",{staticStyle:{color:"#999"}},[t._v(t._s(t.$page.readingTime.text)+"...")])]),t._v(" "),s("h2",{attrs:{id:"what-is-certificate-transparency"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-certificate-transparency"}},[t._v("#")]),t._v(" What is Certificate Transparency")]),t._v(" "),s("p",[t._v("Certificate Transparency (CT) is a protocol for recording and reviewing certificate issuance.")]),t._v(" "),s("p",[t._v("CT is developed by Google to audit SSL certificates in real time and it is also used for threat hunting. (E.g. phishing detection)")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.certificate-transparency.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google's Certificate Transparency project"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.imgur.com/hYTbYns.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"how-to-get-ct-logs-from-a-ct-log-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-get-ct-logs-from-a-ct-log-server"}},[t._v("#")]),t._v(" How to get CT logs from a CT log server")]),t._v(" "),s("p",[t._v("Let's take Google's Xenon2020 (https://ct.googleapis.com/logs/xenon2020/) as an example.")]),t._v(" "),s("p",[t._v("First, you have to know the tree size of the CT log server.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v("\nFri Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" 01:53:42 UTC "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ct.googleapis.com/logs/xenon2020/ct/v1/get-sth"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".tree_size"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("311353005")]),t._v("\n")])])]),s("p",[t._v("It means Xenon2020 has 311,353,005 entries at that moment.")]),t._v(" "),s("p",[t._v("Let's get the last 2 entries from Xenon2020.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ct.googleapis.com/logs/xenon2020/ct/v1/get-entries?start=311353004&end=311353005"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entries"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"leaf_input"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AAAAAAFwQWY9YgAB3kcNJzkUJ1RqMXJzFX4Zxux5WfETK+uL6Viq9lJNn4oAA6QwggOgoAMCAQICEAVOX6FwA+h3QyeNVDYhzuEwCgYIKoZIzj0EAwIwbzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2NvMRkwFwYDVQQKExBDbG91ZEZsYXJlLCBJbmMuMSAwHgYDVQQDExdDbG91ZEZsYXJlIEluYyBFQ0MgQ0EtMjAeFw0yMDAyMTQwMDAwMDBaFw0yMDEwMDkxMjAwMDBaMG0xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQQ2xvdWRmbGFyZSwgSW5jLjEeMBwGA1UEAxMVc25pLmNsb3VkZmxhcmVzc2wuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEfOKEWIol6moTYRxu5dVbnFVg7lMmS+AiGikzLhN6i581o93v0so+LhfVPJTzJbk39fR+opiGVALnlU0RgIeeNKOCAh4wggIaMB8GA1UdIwQYMBaAFD50LR/PRXUEfj/Aooc+TEODURPGMB0GA1UdDgQWBBTjMLpbQPsIuYT9mqqymvmeM1wJwDBaBgNVHREEUzBRghwqLm5hdGlvbmFscGV0YXNzb2NpYXRpb24uY29tghpuYXRpb25hbHBldGFzc29jaWF0aW9uLmNvbYIVc25pLmNsb3VkZmxhcmVzc2wuY29tMA4GA1UdDwEB/wQEAwIHgDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIweQYDVR0fBHIwcDA2oDSgMoYwaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL0Nsb3VkRmxhcmVJbmNFQ0NDQTIuY3JsMDagNKAyhjBodHRwOi8vY3JsNC5kaWdpY2VydC5jb20vQ2xvdWRGbGFyZUluY0VDQ0NBMi5jcmwwTAYDVR0gBEUwQzA3BglghkgBhv1sAQEwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly93d3cuZGlnaWNlcnQuY29tL0NQUzAIBgZngQwBAgIwdgYIKwYBBQUHAQEEajBoMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5kaWdpY2VydC5jb20wQAYIKwYBBQUHMAKGNGh0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LmNvbS9DbG91ZEZsYXJlSW5jRUNDQ0EtMi5jcnQwDAYDVR0TAQH/BAIwAAAA"')]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extra_data"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"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"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"leaf_input"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"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"')]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extra_data"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"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"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("leaf_input")]),t._v(" is a base64-encoded "),s("a",{attrs:{href:"https://tools.ietf.org/html/rfc6962#section-3.4",target:"_blank",rel:"noopener noreferrer"}},[t._v("MerkleTreeLeaf"),s("OutboundLink")],1),t._v(" structure and "),s("code",[t._v("extra_data")]),t._v(" is a base64-encoded "),s("a",{attrs:{href:"https://tools.ietf.org/html/rfc6962#section-3.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("PrecertChainEntry"),s("OutboundLink")],1),t._v(" structure.")]),t._v(" "),s("p",[t._v("You don't have to know the details of the structures because there are many libraries to deal with them.")]),t._v(" "),s("p",[t._v("In Ruby, you can use "),s("code",[t._v("certificate-transparency")]),t._v(" gem.")]),t._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"certificate-transparency"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"json"')])]),t._v("\n\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ct.googleapis.com/logs/xenon2020/ct/v1/get-entries?start=311353004&end=311353005"')])]),t._v("\nres "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\njson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nentries "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entries"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CT")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("LogEntry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_json entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_json\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\np entries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => #<CertificateTransparency::LogEntry:0x00007fb50fad6440")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  @certificate_chain=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   #<CertificateTransparency::CertificateChain:0x00007fb50fad4c08")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    @chain=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     [#<OpenSSL::X509::Certificate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       subject=#<OpenSSL::X509::Name CN=CloudFlare Inc ECC CA-2,O=CloudFlare\\, Inc.,L=San Francisco,ST=CA,C=US>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       issuer=#<OpenSSL::X509::Name CN=Baltimore CyberTrust Root,OU=CyberTrust,O=Baltimore,C=IE>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       serial=#<OpenSSL::BN 21204814788472567899750642361434432950>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       not_before=2015-10-14 12:00:00 UTC,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       not_after=2020-10-09 12:00:00 UTC>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      #<OpenSSL::X509::Certificate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       subject=#<OpenSSL::X509::Name CN=Baltimore CyberTrust Root,OU=CyberTrust,O=Baltimore,C=IE>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       issuer=#<OpenSSL::X509::Name CN=Baltimore CyberTrust Root,OU=CyberTrust,O=Baltimore,C=IE>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       serial=#<OpenSSL::BN 33554617>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       not_before=2000-05-12 18:46:00 UTC,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       not_after=2025-05-12 23:59:00 UTC>]>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  @leaf_input=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   #<CertificateTransparency::MerkleTreeLeaf:0x00007fb50fad6378")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    @leaf_type=0,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    @timestamped_entry=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     #<CertificateTransparency::TimestampedEntry:0x00007fb50fad6170")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      @entry_type=:precert_entry,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      @precert_entry=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       #<CertificateTransparency::PreCert:0x00007fb50fad5cc0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        @issuer_key_hash=\"\\xDEG\\r'9\\x14'Tj1rs\\x15~\\x19\\xC6\\xECyY\\xF1\\x13+\\xEB\\x8B\\xE9X\\xAA\\xF6RM\\x9F\\x8A\",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        @tbs_certificate=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#         "0\\x82\\x03\\xA0\\xA0\\x03\\x02\\x01\\x02\\x02\\x10\\x05N_\\xA1p\\x03\\xE8wC\'\\x8DT6!\\xCE\\xE10\\n\\x06\\b*\\x86H\\xCE=\\x04\\x03\\x020o1\\v0\\t\\x06\\x03U\\x04\\x06\\x13\\x02US1\\v0\\t\\x06\\x03U\\x04\\b\\x13\\x02CA1\\x160\\x14\\x06\\x03U\\x04\\a\\x13\\rSan Francisco1\\x190\\x17\\x06\\x03U\\x04\\n\\x13\\x10CloudFlare, Inc.1 0\\x1E\\x06\\x03U\\x04\\x03\\x13\\x17CloudFlare Inc ECC CA-20\\x1E\\x17\\r200214000000Z\\x17\\r201009120000Z0m1\\v0\\t\\x06\\x03U\\x04\\x06\\x13\\x02US1\\v0\\t\\x06\\x03U\\x04\\b\\x13\\x02CA1\\x160\\x14\\x06\\x03U\\x04\\a\\x13\\rSan Francisco1\\x190\\x17\\x06\\x03U\\x04\\n\\x13\\x10Cloudflare, Inc.1\\x1E0\\x1C\\x06\\x03U\\x04\\x03\\x13\\x15sni.cloudflaressl.com0Y0\\x13\\x06\\a*\\x86H\\xCE=\\x02\\x01\\x06\\b*\\x86H\\xCE=\\x03\\x01\\a\\x03B\\x00\\x04|\\xE2\\x84X\\x8A%\\xEAj\\x13a\\x1Cn\\xE5\\xD5[\\x9CU`\\xEES&K\\xE0\\"\\x1A)3.\\x13z\\x8B\\x9F5\\xA3\\xDD\\xEF\\xD2\\xCA>.\\x17\\xD5<\\x94\\xF3%\\xB97\\xF5\\xF4~\\xA2\\x98\\x86T\\x02\\xE7\\x95M\\x11\\x80\\x87\\x9E4\\xA3\\x82\\x02\\x1E0\\x82\\x02\\x1A0\\x1F\\x06\\x03U\\x1D#\\x04\\x180\\x16\\x80\\x14>t-\\x1F\\xCFEu\\x04~?\\xC0\\xA2\\x87>LC\\x83Q\\x13\\xC60\\x1D\\x06\\x03U\\x1D\\x0E\\x04\\x16\\x04\\x14\\xE30\\xBA[@\\xFB\\b\\xB9\\x84\\xFD\\x9A\\xAA\\xB2\\x9A\\xF9\\x9E3\\\\\\t\\xC00Z\\x06\\x03U\\x1D\\x11\\x04S0Q\\x82\\x1C*.nationalpetassociation.com\\x82\\x1Anationalpetassociation.com\\x82\\x15sni.cloudflaressl.com0\\x0E\\x06\\x03U\\x1D\\x0F\\x01\\x01\\xFF\\x04\\x04\\x03\\x02\\a\\x800\\x1D\\x06\\x03U\\x1D%\\x04\\x160\\x14\\x06\\b+\\x06\\x01\\x05\\x05\\a\\x03\\x01\\x06\\b+\\x06\\x01\\x05\\x05\\a\\x03\\x020y\\x06\\x03U\\x1D\\x1F\\x04r0p06\\xA04\\xA02\\x860http://crl3.digicert.com/CloudFlareIncECCCA2.crl06\\xA04\\xA02\\x860http://crl4.digicert.com/CloudFlareIncECCCA2.crl0L\\x06\\x03U\\x1D \\x04E0C07\\x06\\t`\\x86H\\x01\\x86\\xFDl\\x01\\x010*0(\\x06\\b+\\x06\\x01\\x05\\x05\\a\\x02\\x01\\x16\\x1Chttps://www.digicert.com/CPS0\\b\\x06\\x06g\\x81\\f\\x01\\x02\\x020v\\x06\\b+\\x06\\x01\\x05\\x05\\a\\x01\\x01\\x04j0h0$\\x06\\b+\\x06\\x01\\x05\\x05\\a0\\x01\\x86\\x18http://ocsp.digicert.com0@\\x06\\b+\\x06\\x01\\x05\\x05\\a0\\x02\\x864http://cacerts.digicert.com/CloudFlareIncECCCA-2.crt0\\f\\x06\\x03U\\x1D\\x13\\x01\\x01\\xFF\\x04\\x020\\x00">,')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      @timestamp=2020-02-14 10:53:04 +0900,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      @x509_entry=nil>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    @version=0>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  @precertificate=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   #<OpenSSL::X509::Certificate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    subject=#<OpenSSL::X509::Name CN=sni.cloudflaressl.com,O=Cloudflare\\, Inc.,L=San Francisco,ST=CA,C=US>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    issuer=#<OpenSSL::X509::Name CN=CloudFlare Inc ECC CA-2,O=CloudFlare\\, Inc.,L=San Francisco,ST=CA,C=US>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    serial=#<OpenSSL::BN 7053078753203853291268095395812724449>,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    not_before=2020-02-14 00:00:00 UTC,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    not_after=2020-10-09 12:00:00 UTC>>")]),t._v("\n")])])]),s("h2",{attrs:{id:"what-is-certstream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-certstream"}},[t._v("#")]),t._v(" What is CertStream")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://certstream.calidog.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CertStream"),s("OutboundLink")],1),t._v(" is an Elixir app provides real-time CT log update stream.\nCertStream is developed by "),s("a",{attrs:{href:"https://twitter.com/fitblip",target:"_blank",rel:"noopener noreferrer"}},[t._v("@fitblip"),s("OutboundLink")],1),t._v(" from "),s("a",{attrs:{href:"https://twitter.com/calidogsec",target:"_blank",rel:"noopener noreferrer"}},[t._v("@calidogsec"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("It collects CT logs from CT log servers and broadcasts parsed logs via WebSocket.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.imgur.com/p8tyUdq.png",alt:""}})]),t._v(" "),s("p",[t._v("It works great, but recently I heard some complaints about it.")]),t._v(" "),s("blockquote",{staticClass:"twitter-tweet"},[s("p",{attrs:{lang:"en",dir:"ltr"}},[s("a",{attrs:{href:"https://twitter.com/calidogsec?ref_src=twsrc%5Etfw"}},[t._v("@calidogsec")]),t._v(" Is certstream having issues since a few days? Been getting very few certificates when using the service as well as certstream-server from GitHub. Anyone else seeing this? 😰")]),t._v("— urlscan.io (@urlscanio) "),s("a",{attrs:{href:"https://twitter.com/urlscanio/status/1224805357228380162?ref_src=twsrc%5Etfw"}},[t._v("February 4, 2020")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/CaliDog/certstream-server/issues/22",target:"_blank",rel:"noopener noreferrer"}},[t._v("Missing of certificates due to chunk calculation logic #22"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("So I dug into CertStream's code.")]),t._v(" "),s("h2",{attrs:{id:"how-certstream-collects-ct-logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-certstream-collects-ct-logs"}},[t._v("#")]),t._v(" How CertStream collects CT logs")]),t._v(" "),s("ol",[s("li",[t._v("It gets a list of CT log servers from https://www.gstatic.com/ct/log_list/all_logs_list.json.")]),t._v(" "),s("li",[t._v("It creates a process for each CT log server (by using "),s("a",{attrs:{href:"https://hexdocs.pm/elixir/GenServer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GenServer"),s("OutboundLink")],1),t._v(").")]),t._v(" "),s("li",[t._v("A process monitors a CT log server every 15 seconds.\n"),s("ol",[s("li",[t._v("A process is initialized with a state which has "),s("code",[t._v("url")]),t._v(" (a URL of a CT log server) and "),s("code",[t._v("tree_size")]),t._v(" (a tree size of a CT log server).")]),t._v(" "),s("li",[t._v("A process gets the latest tree size and it gets entries and updates its "),s("code",[t._v("tree_size")]),t._v(" if the latest tree size > "),s("code",[t._v("tree_size")])])])])]),t._v(" "),s("h2",{attrs:{id:"why-certsream-overlooks-logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-certsream-overlooks-logs"}},[t._v("#")]),t._v(" Why CertSream overlooks logs")]),t._v(" "),s("p",[t._v("The issue lies in 3.2.")]),t._v(" "),s("p",[t._v("CertStream sends a "),s("code",[t._v("get-entries")]),t._v(" request to a CT log server and it doesn't count how many numbers of entries actually returned.")]),t._v(" "),s("p",[t._v("It causes a problem because a CT log server doesn't always return requested number of entries.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Request 1,000 entries")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ct.googleapis.com/logs/xenon2020/ct/v1/get-entries?start=0&end=999"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".entries | length"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ct.googleapis.com/logs/xenon2020/ct/v1/get-entries?start=20&end=999"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".entries | length"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ct.googleapis.com/logs/xenon2020/ct/v1/get-entries?start=30&end=999"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".entries | length"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://ct.googleapis.com/logs/xenon2020/ct/v1/get-entries?start=32&end=999"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".entries | length"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("\n")])])]),s("p",[t._v("It means a CT log server has a specific threshold and in this case the threshold is 32.")]),t._v(" "),s("p",[t._v("CertStream doesn't take this behavior into account so it overlooks some entries.")]),t._v(" "),s("div",{staticClass:"language-elixir extra-class"},[s("pre",{pre:!0,attrs:{class:"language-elixir"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("broadcast_updates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" current_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    certificate_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":tree_size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    certificates "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_list")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" certificate_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),t._v("current_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n    certificates\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chunk_every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" ids "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n             update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch_update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n             requested_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ids "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n             returned_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entries"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n             "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" requested_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" returned_count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Logger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Requested '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("requested_count"),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v(" entries but got "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("returned_count"),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v(" entries from https://"),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v("ct/v1/get-entries?start="),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v("&end="),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v('."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n             update\n               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entries"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cert_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n                 parsed_entry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Certstream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("CTParser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse_entry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                 parsed_entry\n                   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("merge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":cert_index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" cert_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":seen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":os")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("system_time")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":microsecond")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1_000_000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":url")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":cert_link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://#{state[:operator]["')]),t._v("url"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]}ct/v1/get-entries?start='),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("cert_index"),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v("&end="),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("cert_index"),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Certstream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("ClientManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("broadcast_to_clients\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("18:29:17.886 [info]  GETing https://ct.googleapis.com/logs/argon2020/ct/v1/get-entries?start=344462138&end=344462201\n\n18:29:18.817 [info]  Requested 64 entries but got 6 entries from https://ct.googleapis.com/logs/argon2020/ct/v1/get-entries?start=344462138&end=344462201.\n")])])]),s("h2",{attrs:{id:"how-to-fix-the-issue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-fix-the-issue"}},[t._v("#")]),t._v(" How to fix the issue")]),t._v(" "),s("p",[t._v("This "),s("a",{attrs:{href:"https://github.com/CaliDog/certstream-server/pull/24",target:"_blank",rel:"noopener noreferrer"}},[t._v("PR"),s("OutboundLink")],1),t._v(" by "),s("a",{attrs:{href:"https://twitter.com/fitblip",target:"_blank",rel:"noopener noreferrer"}},[t._v("@fitblip"),s("OutboundLink")],1),t._v(" fixes the issue.")]),t._v(" "),s("p",[t._v("Now CertStream takes a threshold (a.k.a "),s("code",[t._v("batch_size")]),t._v(") of a CT log server into account.")]),t._v(" "),s("div",{staticClass:"language-elixir extra-class"},[s("pre",{pre:!0,attrs:{class:"language-elixir"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Attempt to fetch 1024 certificates, and see what the API returns. However")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# many certs come back is what we should use as the batch size moving forward")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (at least in theory).")]),t._v("\n    batch_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("http_request_with_retries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v('ct/v1/get-entries?start=0&end=1024"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entries"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n\n    "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Logger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Worker '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("inspect "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v(" found batch size of "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("batch_size"),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v('."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("And it makes a retry when it doesn't get enough entries.")]),t._v(" "),s("div",{staticClass:"language-elixir extra-class"},[s("pre",{pre:!0,attrs:{class:"language-elixir"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If we have *unequal* counts the API has returned less certificates than our initial batch")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# heuristic. Drop the entires we retrieved and recurse to fetch others.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" entry_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" batch_count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Logger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"We didn't retrieve all the entries for this batch, fetching missing "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("#{")]),t._v("batch_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" entry_count"),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}")])]),t._v(' entries"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch_and_broadcast_certs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ids "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("drop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("h2",{attrs:{id:"conclusion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),s("p",[t._v("In this post I described how CertStream works and how it is improved.")]),t._v(" "),s("p",[t._v("It's a good opportunity to learn CT, CertStream and Elixir.")]),t._v(" "),s("p",[t._v("Kudos to @fitblip, @ollieatnccgroup and @urlscanio.")]),t._v(" "),s("h2",{attrs:{id:"references"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://tools.ietf.org/html/rfc6962",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 6962: Certificate Transparency"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://medium.com/cali-dog-security/parsing-certificate-transparency-lists-like-a-boss-981716dc506",target:"_blank",rel:"noopener noreferrer"}},[t._v("Parsing Certificate Transparency Logs Like a Boss"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://medium.com/cali-dog-security/introducing-certstream-3fc13bb98067",target:"_blank",rel:"noopener noreferrer"}},[t._v("Introducing CertStream"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);